{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","useState","totalContributions","setTotalContributions","purchasePrice","setPurchasePrice","offeringFMV","setOfferingFMV","currentPrice","setCurrentPrice","fmv","setFMV","numShares","setShares","refund","setRefund","salePrice","setSalePrice","proceeds","setProceeds","disposition","setDisposition","ordinaryIncome","setOrdinaryIncome","gainLossTitle","setGainLossTitle","capitalGainLoss","setCapitalGainLoss","taxLiability","setTaxLiability","afterTaxNet","setAfterTaxNet","irsLimitConsumed","setIRSLimitConsumed","apy","setAPY","afterTaxAPY","setAfterTaxAPY","useEffect","Math","min","trunc","toFixed","console","log","liability","FEDERAL_INCOME_TAX_RATE","Container","Row","Col","Form","Group","as","controlId","Label","column","sm","Control","defaultValue","onChange","evt","currentTarget","value","plaintext","readOnly","toString","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e7f149a.chunk.js","sourcesContent":["// @flow\nimport React, { useState, useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\n\nimport './App.css';\n\nconst IRS_MAXIMUM = 25000;\nconst MAXIMUM_SHARES_UBER_ALLOWS = 1500;\nconst FEDERAL_INCOME_TAX_RATE = 0.22;\nconst FEDERAL_LONG_TERM_CAPITAL_GAINS_RATE = 0.15;\nconst STATE_INCOME_TAX_RATE = 0.0307;\nconst STATE_LONG_TERM_CAPITAL_GAINS_RATE = 0.0307;\nconst STATE_SHORT_TERM_CAPITAL_GAINS_RATE = 0.0307;\nconst LOCAL_INCOME_TAX_RATE = 0.01;\nconst LOCAL_LONG_TERM_CAPITAL_GAINS_RATE = 0.0;\nconst LOCAL_SHORT_TERM_CAPITAL_GAINS_RATE = 0.0;\n\nfunction App() {\n  const [totalContributions, setTotalContributions] = useState(1412);\n  const [purchasePrice, setPurchasePrice] = useState(25.04);\n  const [offeringFMV, setOfferingFMV] = useState(45);\n  const [currentPrice, setCurrentPrice] = useState(39.66);\n  const [fmv, setFMV] = useState(29.46);\n  const [numShares, setShares] = useState(10);\n  const [refund, setRefund] = useState(0.0);\n  const [salePrice, setSalePrice] = useState(10);\n  const [proceeds, setProceeds] = useState(0);\n  const [disposition, setDisposition] = useState('Qualifying');\n  const [ordinaryIncome, setOrdinaryIncome] = useState(0);\n  const [gainLossTitle, setGainLossTitle] = useState('');\n  const [capitalGainLoss, setCapitalGainLoss] = useState(0);\n  const [taxLiability, setTaxLiability] = useState(0);\n  const [afterTaxNet, setAfterTaxNet] = useState(0);\n  const [irsLimitConsumed, setIRSLimitConsumed] = useState(0);\n  const [apy, setAPY] = useState(0);\n  const [afterTaxAPY, setAfterTaxAPY] = useState(0);\n\n  useEffect(() => {\n    setSalePrice(currentPrice);\n    setAfterTaxNet(ordinaryIncome + capitalGainLoss - taxLiability);\n    setIRSLimitConsumed(numShares * Math.min(offeringFMV, fmv));\n    setAPY(\n      ((ordinaryIncome + capitalGainLoss) /\n        (Math.min(\n          Math.trunc(totalContributions / purchasePrice),\n          Math.trunc(IRS_MAXIMUM / Math.min(offeringFMV, fmv)),\n          1500\n        ) *\n          purchasePrice)) *\n        4\n    );\n    setAfterTaxAPY(\n      (afterTaxNet /\n        (Math.min(\n          Math.trunc(totalContributions / purchasePrice),\n          Math.trunc(IRS_MAXIMUM / Math.min(offeringFMV, fmv)),\n          1500\n        ) *\n          purchasePrice)) *\n        4\n    );\n  }, [\n    afterTaxNet,\n    capitalGainLoss,\n    currentPrice,\n    fmv,\n    numShares,\n    offeringFMV,\n    ordinaryIncome,\n    purchasePrice,\n    taxLiability,\n    totalContributions\n  ]);\n\n  useEffect(\n    function updateShares() {\n      setShares(\n        Math.min(\n          Math.trunc(totalContributions / purchasePrice),\n          Math.trunc(IRS_MAXIMUM / fmv),\n          MAXIMUM_SHARES_UBER_ALLOWS\n        )\n      );\n    },\n    [fmv, numShares, purchasePrice, refund, totalContributions]\n  );\n\n  useEffect(\n    function updateRefund() {\n      setRefund((totalContributions - numShares * purchasePrice).toFixed(2));\n    },\n    [numShares, purchasePrice, totalContributions]\n  );\n\n  useEffect(\n    function updatePurchasePrice() {\n      setPurchasePrice(0.85 * Math.min(offeringFMV, fmv, currentPrice));\n    },\n    [currentPrice, fmv, offeringFMV]\n  );\n\n  useEffect(\n    function updateProceeds() {\n      setProceeds((salePrice * numShares).toFixed(2));\n    },\n    [numShares, salePrice]\n  );\n\n  useEffect(\n    function updateOrdinaryIncome() {\n      if (disposition === 'Disqualifying') {\n        setOrdinaryIncome((currentPrice - purchasePrice) * numShares);\n        setGainLossTitle('Capital gain/loss');\n        console.log((salePrice - (purchasePrice + (currentPrice - purchasePrice))) * numShares);\n        setCapitalGainLoss((salePrice - (purchasePrice + (currentPrice - purchasePrice))) * numShares);\n      } else {\n        setOrdinaryIncome(Math.min(0.15 * Math.min(offeringFMV, fmv), salePrice - purchasePrice) * numShares);\n        setGainLossTitle('Long-term capital gain/loss');\n        setCapitalGainLoss(\n          (salePrice - (purchasePrice + Math.min(0.15 * Math.min(offeringFMV, fmv), salePrice - purchasePrice))) *\n            numShares\n        );\n      }\n    },\n    [disposition, currentPrice, purchasePrice, numShares, offeringFMV, fmv, salePrice]\n  );\n\n  useEffect(\n    function updateTaxLiability() {\n      const tax = (FEDERAL_INCOME_TAX_RATE + STATE_INCOME_TAX_RATE + LOCAL_INCOME_TAX_RATE) * ordinaryIncome;\n      let liability = 0;\n      if (capitalGainLoss >= 0) {\n        if (disposition === 'Disqualifying') {\n          liability =\n            FEDERAL_INCOME_TAX_RATE + STATE_SHORT_TERM_CAPITAL_GAINS_RATE + LOCAL_SHORT_TERM_CAPITAL_GAINS_RATE;\n        } else {\n          liability =\n            (FEDERAL_LONG_TERM_CAPITAL_GAINS_RATE +\n              STATE_LONG_TERM_CAPITAL_GAINS_RATE +\n              LOCAL_LONG_TERM_CAPITAL_GAINS_RATE) *\n            capitalGainLoss;\n        }\n      }\n      setTaxLiability(tax + liability);\n    },\n    [capitalGainLoss, disposition, ordinaryIncome]\n  );\n\n  return (\n    <Container>\n      <br />\n      <Row>\n        <Col>\n          <Form>\n            <Form.Group as={Row} controlId=\"formTotalContributions\">\n              <Form.Label column sm=\"2\">\n                Total Contributions\n              </Form.Label>\n              <Col sm=\"5\">\n                <Form.Control\n                  defaultValue={totalContributions}\n                  onChange={evt => {\n                    setTotalContributions(evt.currentTarget.value);\n                  }}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formPlaintextIRS\">\n              <Form.Label column sm=\"2\">\n                Remaining IRS Limit (Including carryover)\n              </Form.Label>\n              <Col sm=\"5\">\n                <Form.Control plaintext readOnly={true} value={IRS_MAXIMUM} />\n              </Col>\n            </Form.Group>\n            <br />\n            <Form.Group as={Row} controlId=\"offeringDateFMV\">\n              <Form.Label column sm=\"2\">\n                Offering date FMV\n              </Form.Label>\n              <Col sm=\"5\">\n                <Form.Control\n                  defaultValue={offeringFMV}\n                  onChange={evt => {\n                    setOfferingFMV(evt.currentTarget.value);\n                  }}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formPlaintextReset\">\n              <Form.Label column sm=\"2\">\n                FMV on close of day after last purchase date (reset)\n              </Form.Label>\n              <Col sm=\"5\">\n                <Form.Control\n                  defaultValue={fmv}\n                  onChange={evt => {\n                    setFMV(evt.currentTarget.value);\n                  }}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formCurrentPrice\">\n              <Form.Label column sm=\"2\">\n                Current Price\n              </Form.Label>\n              <Col sm=\"5\">\n                <Form.Control\n                  defaultValue={currentPrice}\n                  onChange={evt => {\n                    setCurrentPrice(evt.currentTarget.value);\n                  }}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formPurchasePrice\">\n              <Form.Label column sm=\"2\">\n                Purchase Price\n              </Form.Label>\n              <Col sm=\"5\">\n                <Form.Control plaintext readOnly value={purchasePrice.toFixed(2)} />\n              </Col>\n            </Form.Group>\n            <br />\n            <Form.Group as={Row} controlId=\"sharesToBePurchased\">\n              <Form.Label column sm=\"2\">\n                Shares To Be Purchased\n              </Form.Label>\n              <Col sm=\"5\">\n                <Form.Control plaintext readOnly value={numShares} />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formRefundAmount\">\n              <Form.Label column sm=\"2\">\n                Refund Amount\n              </Form.Label>\n              <Col sm=\"5\">\n                <Form.Control plaintext readOnly value={refund} />\n              </Col>\n            </Form.Group>\n            <br />\n            <Form.Group as={Row} controlId=\"formSalePrice\">\n              <Form.Label column sm=\"2\">\n                Sale price (default is current price)\n              </Form.Label>\n              <Col sm=\"5\">\n                <Form.Control\n                  defaultValue={currentPrice}\n                  onChange={evt => {\n                    setSalePrice(evt.currentTarget.value);\n                  }}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formDisposition\">\n              <Form.Label column sm=\"2\">\n                Disposition\n              </Form.Label>\n              <Col sm=\"5\">\n                <Form.Control as=\"select\" onChange={evt => setDisposition(evt.currentTarget.value)}>\n                  <option>Qualifying</option>\n                  <option>Disqualifying</option>\n                </Form.Control>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formProceeds\">\n              <Form.Label column sm=\"2\">\n                Proceeds from Sale\n              </Form.Label>\n              <Col sm=\"5\">\n                <Form.Control plaintext readOnly value={proceeds} />\n              </Col>\n            </Form.Group>\n            <br />\n            <Form.Group as={Row} controlId=\"formOrdinaryIncome\">\n              <Form.Label column sm=\"2\">\n                Ordinary Income\n              </Form.Label>\n              <Col sm=\"5\">\n                <Form.Control plaintext readOnly value={ordinaryIncome.toFixed(2)} />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formGainLoss\">\n              <Form.Label column sm=\"2\">\n                {gainLossTitle}\n              </Form.Label>\n              <Col sm=\"5\">\n                <Form.Control plaintext readOnly value={capitalGainLoss.toFixed(2)} />\n              </Col>\n            </Form.Group>\n            <br />\n            <Form.Group as={Row} controlId=\"formTaxLiability\">\n              <Form.Label column sm=\"2\">\n                Tax Liability\n              </Form.Label>\n              <Col sm=\"5\">\n                <Form.Control plaintext readOnly value={taxLiability.toFixed(2)} />\n              </Col>\n            </Form.Group>\n            <br />\n            <Form.Group as={Row} controlId=\"formAfterTaxNet\">\n              <Form.Label column sm=\"2\">\n                After Tax Net\n              </Form.Label>\n              <Col sm=\"5\">\n                <Form.Control plaintext readOnly value={afterTaxNet.toFixed(2)} />\n              </Col>\n            </Form.Group>\n            <br />\n            <Form.Group as={Row} controlId=\"formIRSLimitConsumed\">\n              <Form.Label column sm=\"2\">\n                IRS Limit Consumed\n              </Form.Label>\n              <Col sm=\"5\">\n                <Form.Control plaintext readOnly value={irsLimitConsumed.toFixed(2)} />\n              </Col>\n            </Form.Group>\n            <br />\n            <Form.Group as={Row} controlId=\"formAPY\">\n              <Form.Label column sm=\"2\">\n                APY (assuming non-weighted average of having your money tied up for 3 months)\n              </Form.Label>\n              <Col sm=\"5\">\n                <Form.Control plaintext readOnly value={(apy.toFixed(2) * 100).toString() + '%'} />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formAfterTaxAPY\">\n              <Form.Label column sm=\"2\">\n                After tax APY (same assumption)\n              </Form.Label>\n              <Col sm=\"5\">\n                <Form.Control plaintext readOnly value={(afterTaxAPY.toFixed(2) * 100).toString() + '%'} />\n              </Col>\n            </Form.Group>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}